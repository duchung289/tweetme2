{"ast":null,"code":"var _jsxFileName = \"/Users/administrator/Desktop/Development-Projects/CodeEntrepreneurs/FollowCoding/tweetme2/tweetme2-web/src/profiles/components.js\";\nimport React from 'react';\nexport function UserLink(props) {\n  const {\n    username\n  } = props;\n\n  const handleUserLink = event => {\n    window.location.href = `/profile/${username}`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pointer\",\n    onClick: handleUserLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }\n  }, props.children);\n}\nexport function UserDisplay(props) {\n  const {\n    user,\n    includeFullname,\n    hideLink\n  } = props;\n  const displayName = includeFullname === true ? `${user.first_name} ${user.last_name} ` : null;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }\n  }, displayName, hideLink === true ? `@${user.username}` : /*#__PURE__*/React.createElement(UserLink, {\n    username: user.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 51\n    }\n  }, \"@\", user.username));\n}\nexport function UserPicture(props) {\n  const {\n    user,\n    hideLink\n  } = props;\n  const userIdSpan = /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mx-1 px-3 py-2 rounded-circle bg-dark text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 24\n    }\n  }, user.username[0]);\n  return hideLink === true ? userIdSpan : /*#__PURE__*/React.createElement(UserLink, {\n    username: user.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 44\n    }\n  }, userIdSpan);\n}","map":{"version":3,"sources":["/Users/administrator/Desktop/Development-Projects/CodeEntrepreneurs/FollowCoding/tweetme2/tweetme2-web/src/profiles/components.js"],"names":["React","UserLink","props","username","handleUserLink","event","window","location","href","children","UserDisplay","user","includeFullname","hideLink","displayName","first_name","last_name","UserPicture","userIdSpan"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAC5B,QAAM;AAACC,IAAAA;AAAD,MAAaD,KAAnB;;AACA,QAAME,cAAc,GAAIC,KAAD,IAAW;AAC9BC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAwB,YAAWL,QAAS,EAA5C;AACH,GAFD;;AAGA,sBAAO;AAAM,IAAA,SAAS,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFF,KAAK,CAACO,QADJ,CAAP;AAGH;AAED,OAAO,SAASC,WAAT,CAAqBR,KAArB,EAA4B;AAC/B,QAAM;AAACS,IAAAA,IAAD;AAAOC,IAAAA,eAAP;AAAwBC,IAAAA;AAAxB,MAAoCX,KAA1C;AACA,QAAMY,WAAW,GAAGF,eAAe,KAAK,IAApB,GAA2B,GAAED,IAAI,CAACI,UAAW,IAAGJ,IAAI,CAACK,SAAU,GAA/D,GAAoE,IAAxF;AACA,sBAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFF,WADE,EAEFD,QAAQ,KAAI,IAAZ,GAAoB,IAAGF,IAAI,CAACR,QAAS,EAArC,gBAAyC,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEQ,IAAI,CAACR,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAqCQ,IAAI,CAACR,QAA1C,CAFvC,CAAP;AAIH;AAED,OAAO,SAASc,WAAT,CAAqBf,KAArB,EAA4B;AAC/B,QAAM;AAACS,IAAAA,IAAD;AAAOE,IAAAA;AAAP,MAAmBX,KAAzB;AACA,QAAMgB,UAAU,gBAAG;AAAM,IAAA,SAAS,EAAC,kDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACdP,IAAI,CAACR,QAAL,CAAc,CAAd,CADc,CAAnB;AAGA,SAAOU,QAAQ,KAAI,IAAZ,GAAmBK,UAAnB,gBAAgC,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEP,IAAI,CAACR,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCe,UAApC,CAAvC;AACH","sourcesContent":["import React from 'react'\n\nexport function UserLink(props) {\n    const {username} = props\n    const handleUserLink = (event) => {\n        window.location.href = `/profile/${username}`\n    }\n    return <span className='pointer' onClick={handleUserLink}>\n        {props.children}\n    </span>\n}\n\nexport function UserDisplay(props) {\n    const {user, includeFullname, hideLink} = props\n    const displayName = includeFullname === true? `${user.first_name} ${user.last_name} ` : null\n    return <React.Fragment>\n        {displayName}        \n        {hideLink=== true ? `@${user.username}` : <UserLink username={user.username}>@{user.username}</UserLink>}\n    </React.Fragment>\n}\n\nexport function UserPicture(props) {\n    const {user, hideLink} = props\n    const userIdSpan = <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\n        {user.username[0]}\n    </span>\n    return hideLink ===true ? userIdSpan : <UserLink username={user.username}>{userIdSpan}</UserLink>\n}\n\n"]},"metadata":{},"sourceType":"module"}