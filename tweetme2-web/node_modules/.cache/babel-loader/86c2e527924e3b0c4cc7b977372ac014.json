{"ast":null,"code":"var _jsxFileName = \"/Users/administrator/Desktop/Development-Projects/CodeEntrepreneurs/FollowCoding/tweetme2/tweetme2-web/src/tweets/components.js\";\nimport React, { useEffect, useState } from 'react';\nimport { apiTweetAction, apiTweetCreate, apiTweetList } from './lookup';\nexport function TweetsComponent(props) {\n  const textAreaRef = React.createRef();\n  const [newTweets, setNewTweets] = useState([]);\n\n  const handleBackendUpdate = (response, status) => {\n    // Backend api response handler\n    let tempNewTweets = [...newTweets];\n\n    if (status === 201) {\n      tempNewTweets.unshift(response);\n      setNewTweets(tempNewTweets);\n    } else {\n      alert('An error occured. Please try again!');\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newValue = textAreaRef.current.value; // Backend api request\n\n    apiTweetCreate(newValue, handleBackendUpdate);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: textAreaRef,\n    required: true,\n    className: \"form-control\",\n    name: \"tweet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Tweet\"))), /*#__PURE__*/React.createElement(TweetList, {\n    newTweets: newTweets,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }));\n}\nexport function TweetList(props) {\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweets, tweetsInit]);\n  useEffect(() => {\n    if (tweetsDidSet === false) {\n      const handleTweetListLookup = (response, status) => {\n        if (status === 200) {\n          setTweetsInit(response);\n          setTweetsDidSet(true);\n        } else {\n          alert('There was an error!');\n        }\n      };\n\n      apiTweetList(handleTweetListLookup);\n    }\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet]);\n\n  const handleDidRetweet = newTweet => {\n    const updateTweetsInit = [...tweetsInit];\n    updateTweetsInit.unshift(newTweet);\n    setTweetsInit(updateTweetsInit);\n    const updateFinalTweets = [...tweets];\n    updateFinalTweets.unshift(tweets);\n    tweets(updateFinalTweets);\n  };\n\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      tweet: item,\n      didRetweet: handleDidRetweet,\n      className: \"my-5 py-5 border bg-white text-dark\",\n      key: `${index}-{item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 16\n      }\n    });\n  });\n}\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action,\n    didPerformAction\n  } = props;\n  const likes = tweet.likes ? tweet.likes : 0;\n  const className = props.className ? props.className : 'btn btn-primary btn-sm';\n  const actionDisplay = action.display ? action.display : 'Action';\n\n  const handleActionBackendEvent = (response, status) => {\n    console.log(response, status);\n\n    if ((status === 200 || status === 201) && didPerformAction) {\n      // setLikes(response.likes)\n      didPerformAction(response, status); // setUserLike(true)\n    } // if (action.type === 'like'){\n    //     if (userLike ===true) {\n    //         // perhaps I unlike it\n    //         setLikes(likes -1)\n    //         setUserLike(false)\n    //     } else {\n    //         setLikes(likes + 1)\n    //         setUserLike(true)\n    //     }\n    // }\n\n  };\n\n  const handleClick = event => {\n    event.preventDefault();\n    apiTweetAction(tweet.id, action.type, handleActionBackendEvent);\n  };\n\n  const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay;\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: className,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 12\n    }\n  }, display);\n}\nexport function ParentTweet(props) {\n  const {\n    tweet\n  } = props;\n  return tweet.parent ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-11 mx-auto p-3 border rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0 text-muted small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Retweet\"), /*#__PURE__*/React.createElement(Tweet, {\n    className: '',\n    tweet: tweet.parent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }))) : null;\n}\nexport function Tweet(props) {\n  const {\n    tweet,\n    didRetweet\n  } = props;\n  const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null);\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n\n  const handlePerformAction = (newActionTweet, status) => {\n    if (status === 200) {\n      setActionTweet(newActionTweet);\n    } else if (status === 201) {\n      if (didRetweet) {\n        didRetweet(newActionTweet);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, tweet.id, \" - \", tweet.content), /*#__PURE__*/React.createElement(ParentTweet, {\n    tweet: tweet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  })), actionTweet && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: actionTweet,\n    didPerformAction: handlePerformAction,\n    action: {\n      type: 'like',\n      display: 'Likes'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: actionTweet,\n    didPerformAction: handlePerformAction,\n    action: {\n      type: 'unlike',\n      display: 'Unlike'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: actionTweet,\n    didPerformAction: handlePerformAction,\n    action: {\n      type: 'retweet',\n      display: 'ReTweet'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/administrator/Desktop/Development-Projects/CodeEntrepreneurs/FollowCoding/tweetme2/tweetme2-web/src/tweets/components.js"],"names":["React","useEffect","useState","apiTweetAction","apiTweetCreate","apiTweetList","TweetsComponent","props","textAreaRef","createRef","newTweets","setNewTweets","handleBackendUpdate","response","status","tempNewTweets","unshift","alert","handleSubmit","event","preventDefault","newValue","current","value","className","TweetList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","final","concat","length","handleTweetListLookup","handleDidRetweet","newTweet","updateTweetsInit","updateFinalTweets","map","item","index","ActionBtn","tweet","action","didPerformAction","likes","actionDisplay","display","handleActionBackendEvent","console","log","handleClick","id","type","ParentTweet","parent","Tweet","didRetweet","actionTweet","setActionTweet","handlePerformAction","newActionTweet","content"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;AAEA,SACIC,cADJ,EAEIC,cAFJ,EAGIC,YAHJ,QAGwB,UAHxB;AAMA,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AACnC,QAAMC,WAAW,GAAGR,KAAK,CAACS,SAAN,EAApB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;;AACA,QAAMU,mBAAmB,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AAC9C;AACA,QAAIC,aAAa,GAAG,CAAC,GAAGL,SAAJ,CAApB;;AACA,QAAII,MAAM,KAAI,GAAd,EAAmB;AACfC,MAAAA,aAAa,CAACC,OAAd,CAAsBH,QAAtB;AACAF,MAAAA,YAAY,CAACI,aAAD,CAAZ;AACH,KAHD,MAGO;AACHE,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACH;AACJ,GATD;;AAUA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,QAAQ,GAACb,WAAW,CAACc,OAAZ,CAAoBC,KAAnC,CAF4B,CAG5B;;AACAnB,IAAAA,cAAc,CAACiB,QAAD,EAAUT,mBAAV,CAAd;AACAJ,IAAAA,WAAW,CAACc,OAAZ,CAAoBC,KAApB,GAA4B,EAA5B;AACH,GAND;;AAOA,sBAAO;AAAK,IAAA,SAAS,EAAEhB,KAAK,CAACiB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAEN,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAU,IAAA,GAAG,EAAEV,WAAf;AAA4B,IAAA,QAAQ,EAAE,IAAtC;AAA4C,IAAA,SAAS,EAAC,cAAtD;AAAqE,IAAA,IAAI,EAAG,OAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAII;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,CADJ,CADG,eASH,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEE,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATG,CAAP;AAYH;AAGD,OAAO,SAASe,SAAT,CAAmBlB,KAAnB,EAA0B;AAC7B,QAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC0B,MAAD,EAASC,SAAT,IAAsB3B,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC4B,YAAD,EAAeC,eAAf,IAAkC7B,QAAQ,CAAC,KAAD,CAAhD;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM+B,KAAK,GAAG,CAAC,GAAGzB,KAAK,CAACG,SAAV,EAAqBuB,MAArB,CAA4BP,UAA5B,CAAd;;AACA,QAAIM,KAAK,CAACE,MAAN,KAAiBN,MAAM,CAACM,MAA5B,EAAmC;AAC/BL,MAAAA,SAAS,CAACG,KAAD,CAAT;AACH;AACJ,GALQ,EAKP,CAACzB,KAAK,CAACG,SAAP,EAAkBkB,MAAlB,EAA0BF,UAA1B,CALO,CAAT;AAOAzB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI6B,YAAY,KAAK,KAArB,EAA4B;AACxB,YAAMK,qBAAqB,GAAG,CAACtB,QAAD,EAAWC,MAAX,KAAsB;AAChD,YAAIA,MAAM,KAAK,GAAf,EAAoB;AAChBa,UAAAA,aAAa,CAACd,QAAD,CAAb;AACAkB,UAAAA,eAAe,CAAC,IAAD,CAAf;AACH,SAHD,MAGO;AACHd,UAAAA,KAAK,CAAC,qBAAD,CAAL;AACH;AACJ,OAPD;;AAQAZ,MAAAA,YAAY,CAAC8B,qBAAD,CAAZ;AACH;AACJ,GAZQ,EAYN,CAACT,UAAD,EAAaI,YAAb,EAA2BC,eAA3B,CAZM,CAAT;;AAcA,QAAMK,gBAAgB,GAAIC,QAAD,IAAc;AACnC,UAAMC,gBAAgB,GAAG,CAAC,GAAGZ,UAAJ,CAAzB;AACAY,IAAAA,gBAAgB,CAACtB,OAAjB,CAAyBqB,QAAzB;AACAV,IAAAA,aAAa,CAACW,gBAAD,CAAb;AACA,UAAMC,iBAAiB,GAAG,CAAC,GAAGX,MAAJ,CAA1B;AACAW,IAAAA,iBAAiB,CAACvB,OAAlB,CAA0BY,MAA1B;AACAA,IAAAA,MAAM,CAACW,iBAAD,CAAN;AACH,GAPD;;AAQA,SAAOX,MAAM,CAACY,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,KAAe;AAC7B,wBAAO,oBAAC,KAAD;AACP,MAAA,KAAK,EAAED,IADA;AAEP,MAAA,UAAU,EAAIL,gBAFP;AAGP,MAAA,SAAS,EAAC,qCAHH;AAIP,MAAA,GAAG,EAAG,GAAEM,KAAM,YAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAKH,GANM,CAAP;AAOH;AAED,OAAO,SAASC,SAAT,CAAmBpC,KAAnB,EAA0B;AAC7B,QAAM;AAACqC,IAAAA,KAAD;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,MAAoCvC,KAA1C;AACA,QAAMwC,KAAK,GAAGH,KAAK,CAACG,KAAN,GAAcH,KAAK,CAACG,KAApB,GAA4B,CAA1C;AACA,QAAMvB,SAAS,GAAGjB,KAAK,CAACiB,SAAN,GAAkBjB,KAAK,CAACiB,SAAxB,GAAkC,wBAApD;AACA,QAAMwB,aAAa,GAAGH,MAAM,CAACI,OAAP,GAAgBJ,MAAM,CAACI,OAAvB,GAAiC,QAAvD;;AACA,QAAMC,wBAAwB,GAAG,CAACrC,QAAD,EAAWC,MAAX,KAAsB;AACnDqC,IAAAA,OAAO,CAACC,GAAR,CAAYvC,QAAZ,EAAsBC,MAAtB;;AACA,QAAI,CAACA,MAAM,KAAI,GAAV,IAAiBA,MAAM,KAAK,GAA7B,KAAmCgC,gBAAvC,EAAwD;AACpD;AACAA,MAAAA,gBAAgB,CAACjC,QAAD,EAAWC,MAAX,CAAhB,CAFoD,CAGpD;AACH,KANkD,CAOnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH,GAjBD;;AAkBA,QAAMuC,WAAW,GAAIlC,KAAD,IAAU;AAC1BA,IAAAA,KAAK,CAACC,cAAN;AACAjB,IAAAA,cAAc,CAACyC,KAAK,CAACU,EAAP,EAAWT,MAAM,CAACU,IAAlB,EAAwBL,wBAAxB,CAAd;AAEH,GAJD;;AAKA,QAAMD,OAAO,GAAGJ,MAAM,CAACU,IAAP,KAAgB,MAAhB,GAA0B,GAAER,KAAM,IAAGC,aAAc,EAAnD,GAAuDA,aAAvE;AAEA,sBAAO;AAAQ,IAAA,SAAS,EAAExB,SAAnB;AAA8B,IAAA,OAAO,EAAE6B,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqDJ,OAArD,CAAP;AACH;AAED,OAAO,SAASO,WAAT,CAAqBjD,KAArB,EAA4B;AAC/B,QAAM;AAACqC,IAAAA;AAAD,MAAUrC,KAAhB;AACA,SAAOqC,KAAK,CAACa,MAAN,gBAAc;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACjB;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE,EAAlB;AAAsB,IAAA,KAAK,EAAEb,KAAK,CAACa,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADiB,CAAd,GAKE,IALT;AAMH;AAED,OAAQ,SAASC,KAAT,CAAenD,KAAf,EAAsB;AAC1B,QAAM;AAACqC,IAAAA,KAAD;AAAQe,IAAAA;AAAR,MAAsBpD,KAA5B;AACA,QAAM,CAACqD,WAAD,EAAaC,cAAb,IAA+B3D,QAAQ,CAACK,KAAK,CAACqC,KAAN,GAAcrC,KAAK,CAACqC,KAApB,GAA4B,IAA7B,CAA7C;AACA,QAAMpB,SAAS,GAAGjB,KAAK,CAACiB,SAAN,GAAkBjB,KAAK,CAACiB,SAAxB,GAAkC,yBAApD;;AACA,QAAMsC,mBAAmB,GAAG,CAACC,cAAD,EAAiBjD,MAAjB,KAA4B;AACpD,QAAIA,MAAM,KAAI,GAAd,EAAkB;AACd+C,MAAAA,cAAc,CAACE,cAAD,CAAd;AACH,KAFD,MAEO,IAAIjD,MAAM,KAAK,GAAf,EAAoB;AACvB,UAAI6C,UAAJ,EAAe;AACXA,QAAAA,UAAU,CAACI,cAAD,CAAV;AACH;AACJ;AAEJ,GATD;;AAUA,sBAAO;AAAK,IAAA,SAAS,EAAEvC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIoB,KAAK,CAACU,EAAV,SAAiBV,KAAK,CAACoB,OAAvB,CADJ,eAEI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEpB,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADG,EAMFgB,WAAW,iBAAI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACZ,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEA,WAAlB;AAA+B,IAAA,gBAAgB,EAAEE,mBAAjD;AAAsE,IAAA,MAAM,EAAE;AAACP,MAAAA,IAAI,EAAC,MAAN;AAAcN,MAAAA,OAAO,EAAC;AAAtB,KAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,eAEZ,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEW,WAAlB;AAA+B,IAAA,gBAAgB,EAAEE,mBAAjD;AAAsE,IAAA,MAAM,EAAE;AAACP,MAAAA,IAAI,EAAC,QAAN;AAAgBN,MAAAA,OAAO,EAAC;AAAxB,KAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFY,eAGZ,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEW,WAAlB;AAA+B,IAAA,gBAAgB,EAAEE,mBAAjD;AAAsE,IAAA,MAAM,EAAE;AAACP,MAAAA,IAAI,EAAC,SAAN;AAAiBN,MAAAA,OAAO,EAAC;AAAzB,KAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHY,CANb,CAAP;AAaH","sourcesContent":["import React, {useEffect, useState}  from 'react'\n\nimport {\n    apiTweetAction,\n    apiTweetCreate, \n    apiTweetList } from './lookup'\n\n\nexport function TweetsComponent(props) {\n    const textAreaRef = React.createRef()\n    const [newTweets, setNewTweets] = useState([])\n    const handleBackendUpdate = (response, status) => {\n        // Backend api response handler\n        let tempNewTweets = [...newTweets]\n        if (status ===201) {\n            tempNewTweets.unshift(response)\n            setNewTweets(tempNewTweets)\n        } else {\n            alert('An error occured. Please try again!')\n        }\n    }\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newValue=textAreaRef.current.value\n        // Backend api request\n        apiTweetCreate(newValue,handleBackendUpdate)        \n        textAreaRef.current.value = ''\n    }\n    return <div className={props.className}>\n        <div className='col-12 mb-3'>\n            <form onSubmit={handleSubmit}>        \n                <textarea ref={textAreaRef} required={true} className='form-control' name = 'tweet'>\n\n                </textarea>\n                <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n            </form>\n        </div>\n        <TweetList newTweets={newTweets}/>\n    </div>\n    \n}\n\n  \nexport function TweetList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    useEffect(() => {\n        const final = [...props.newTweets].concat(tweetsInit)\n        if (final.length !== tweets.length){\n            setTweets(final)\n        }\n    },[props.newTweets, tweets, tweetsInit])\n\n    useEffect(() => {\n        if (tweetsDidSet === false) {\n            const handleTweetListLookup = (response, status) => {\n                if (status === 200) {\n                    setTweetsInit(response)\n                    setTweetsDidSet(true)\n                } else {\n                    alert('There was an error!')\n                }\n            }\n            apiTweetList(handleTweetListLookup)\n        }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet])\n    \n    const handleDidRetweet = (newTweet) => {\n        const updateTweetsInit = [...tweetsInit]\n        updateTweetsInit.unshift(newTweet)\n        setTweetsInit(updateTweetsInit)\n        const updateFinalTweets = [...tweets]\n        updateFinalTweets.unshift(tweets)\n        tweets(updateFinalTweets)\n    }\n    return tweets.map((item, index)=>{\n        return <Tweet \n        tweet={item} \n        didRetweet = {handleDidRetweet}\n        className='my-5 py-5 border bg-white text-dark' \n        key={`${index}-{item.id}`}/>\n    })\n}\n\nexport function ActionBtn(props) {\n    const {tweet, action, didPerformAction} = props\n    const likes = tweet.likes ? tweet.likes : 0\n    const className = props.className ? props.className:'btn btn-primary btn-sm'\n    const actionDisplay = action.display? action.display : 'Action'\n    const handleActionBackendEvent = (response, status) => {\n        console.log(response, status)\n        if ((status ===200 || status === 201)&&didPerformAction){\n            // setLikes(response.likes)\n            didPerformAction(response, status)\n            // setUserLike(true)\n        }\n        // if (action.type === 'like'){\n        //     if (userLike ===true) {\n        //         // perhaps I unlike it\n        //         setLikes(likes -1)\n        //         setUserLike(false)\n        //     } else {\n        //         setLikes(likes + 1)\n        //         setUserLike(true)\n        //     }\n        // }\n    }\n    const handleClick = (event) =>{\n        event.preventDefault()\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\n        \n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n    \n    return <button className={className} onClick={handleClick}>{display}</button>\n}\n\nexport function ParentTweet(props) {\n    const {tweet} = props\n    return tweet.parent? <div className='row'>\n        <div className='col-11 mx-auto p-3 border rounded'>\n            <p className='mb-0 text-muted small'>Retweet</p>\n            <Tweet className={''} tweet={tweet.parent}/>\n        </div>                \n    </div> : null\n}\n  \nexport  function Tweet(props) {\n    const {tweet, didRetweet} = props\n    const [actionTweet,setActionTweet] = useState(props.tweet ? props.tweet : null)\n    const className = props.className ? props.className:'col-10 mx-auto col-md-6'\n    const handlePerformAction = (newActionTweet, status) => {\n        if (status ===200){\n            setActionTweet(newActionTweet)\n        } else if (status === 201) {\n            if (didRetweet){\n                didRetweet(newActionTweet)\n            }\n        }\n        \n    }\n    return <div className={className}>\n        <div>\n            <p>{tweet.id} - {tweet.content}</p>\n            <ParentTweet tweet={tweet}/>\n        </div>\n      \n        {actionTweet && <div className='btn btn-group'>\n            <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:'like', display:'Likes'}}/>\n            <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:'unlike', display:'Unlike'}}/>\n            <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:'retweet', display:'ReTweet'}}/>\n        </div>\n        }\n    </div>\n}"]},"metadata":{},"sourceType":"module"}