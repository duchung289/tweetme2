{"ast":null,"code":"var _jsxFileName = \"/Users/administrator/Desktop/Development-Projects/CodeEntrepreneurs/FollowCoding/tweetme2/tweetme2-web/src/tweets/components.js\";\nimport React, { useEffect, useState } from 'react';\nimport { apiTweetCreate, apiTweetList } from './lookup';\nexport function TweetsComponent(props) {\n  const textAreaRef = React.createRef();\n  const [newTweets, setNewTweets] = useState([]);\n\n  const handleBackendUpdate = (response, status) => {\n    // Backend api response handler\n    let tempNewTweets = [...newTweets];\n\n    if (status === 201) {\n      tempNewTweets.unshift(response);\n      setNewTweets(tempNewTweets);\n    } else {\n      alert('An error occured. Please try again!');\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newValue = textAreaRef.current.value; // Backend api request\n\n    apiTweetCreate(newValue, handleBackendUpdate);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: textAreaRef,\n    required: true,\n    className: \"form-control\",\n    name: \"tweet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"Tweet\"))), /*#__PURE__*/React.createElement(TweetList, {\n    newTweets: newTweets,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }));\n}\nexport function TweetList(props) {\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweets, tweetsInit]);\n  useEffect(() => {\n    if (tweetsDidSet === false) {\n      const handleTweetListLookup = (response, status) => {\n        if (status === 200) {\n          setTweetsInit(response);\n          setTweetsDidSet(true);\n        } else {\n          alert('There was an error!');\n        }\n      };\n\n      apiTweetList(handleTweetListLookup);\n    }\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet]);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      tweet: item,\n      className: \"my-5 py-5 border bg-white text-dark\",\n      key: `${index}-{item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 14\n      }\n    });\n  });\n}\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action\n  } = props;\n  const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\n  const [userLike, setUserLike] = useState(tweet.likes === true ? true : false);\n  const className = props.className ? props.className : 'btn btn-primary btn-sm';\n  const actionDisplay = action.display ? action.display : 'Action';\n\n  const handleClick = event => {\n    event.preventDefault();\n\n    if (action.type === 'like') {\n      if (userLike === true) {\n        // perhaps I unlike it\n        setLikes(likes - 1);\n        setUserLike(false);\n      } else {\n        setLikes(likes + 1);\n        setUserLike(true);\n      }\n    }\n  };\n\n  const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay;\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: className,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }\n  }, display);\n}\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, tweet.id, \" - \", tweet.content), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: 'like',\n      display: 'Likes'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: 'unlike',\n      display: 'Unlike'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: 'retweet',\n      display: 'ReTweet'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/administrator/Desktop/Development-Projects/CodeEntrepreneurs/FollowCoding/tweetme2/tweetme2-web/src/tweets/components.js"],"names":["React","useEffect","useState","apiTweetCreate","apiTweetList","TweetsComponent","props","textAreaRef","createRef","newTweets","setNewTweets","handleBackendUpdate","response","status","tempNewTweets","unshift","alert","handleSubmit","event","preventDefault","newValue","current","value","className","TweetList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","final","concat","length","handleTweetListLookup","map","item","index","ActionBtn","tweet","action","likes","setLikes","userLike","setUserLike","actionDisplay","display","handleClick","type","Tweet","id","content"],"mappings":"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","sourcesContent":["import React, {useEffect, useState}  from 'react'\n\nimport {apiTweetCreate, apiTweetList} from './lookup'\n\n\nexport function TweetsComponent(props) {\n    const textAreaRef = React.createRef()\n    const [newTweets, setNewTweets] = useState([])\n    const handleBackendUpdate = (response, status) => {\n        // Backend api response handler\n        let tempNewTweets = [...newTweets]\n        if (status ===201) {\n            tempNewTweets.unshift(response)\n            setNewTweets(tempNewTweets)\n        } else {\n            alert('An error occured. Please try again!')\n        }\n    }\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newValue=textAreaRef.current.value\n        // Backend api request\n        apiTweetCreate(newValue,handleBackendUpdate)        \n        textAreaRef.current.value = ''\n    }\n    return <div className={props.className}>\n        <div className='col-12 mb-3'>\n            <form onSubmit={handleSubmit}>        \n                <textarea ref={textAreaRef} required={true} className='form-control' name = 'tweet'>\n\n                </textarea>\n                <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n            </form>\n        </div>\n        <TweetList newTweets={newTweets}/>\n    </div>\n    \n}\n\n  \nexport function TweetList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    useEffect(() => {\n        const final = [...props.newTweets].concat(tweetsInit)\n        if (final.length !== tweets.length){\n            setTweets(final)\n        }\n    },[props.newTweets, tweets, tweetsInit])\n\n    useEffect(() => {\n        if (tweetsDidSet === false) {\n            const handleTweetListLookup = (response, status) => {\n                if (status === 200) {\n                    setTweetsInit(response)\n                    setTweetsDidSet(true)\n                } else {\n                    alert('There was an error!')\n                }\n            }\n            apiTweetList(handleTweetListLookup)\n        }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet])\n    \n    return tweets.map((item, index)=>{\n      return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`}/>\n    })\n}\n\nexport function ActionBtn(props) {\n    const {tweet, action} = props\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0)\n    const [userLike, setUserLike] = useState(tweet.likes ===true ? true : false)\n    const className = props.className ? props.className:'btn btn-primary btn-sm'\n    const actionDisplay = action.display? action.display : 'Action'\n    const handleClick = (event) =>{\n        event.preventDefault()\n        if (action.type === 'like'){\n            if (userLike ===true) {\n                // perhaps I unlike it\n                setLikes(likes -1)\n                setUserLike(false)\n            } else {\n                setLikes(likes + 1)\n                setUserLike(true)\n            }\n        }\n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n    \n    return <button className={className} onClick={handleClick}>{display}</button>\n}\n  \nexport  function Tweet(props) {\n    const {tweet} = props\n    const className = props.className ? props.className:'col-10 mx-auto col-md-6'\n    return <div className={className}>\n      <p>{tweet.id} - {tweet.content}</p>\n      <div className='btn btn-group'>\n        <ActionBtn tweet={tweet} action={{type:'like', display:'Likes'}}/>\n        <ActionBtn tweet={tweet} action={{type:'unlike', display:'Unlike'}}/>\n        <ActionBtn tweet={tweet} action={{type:'retweet', display:'ReTweet'}}/>\n      </div>\n    </div>\n}"]},"metadata":{},"sourceType":"module"}