{"ast":null,"code":"import _toConsumableArray from\"/Users/administrator/Desktop/Development-Projects/CodeEntrepreneurs/FollowCoding/tweetme2/tweetme2-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/administrator/Desktop/Development-Projects/CodeEntrepreneurs/FollowCoding/tweetme2/tweetme2-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Tweet}from'./detail';import{apiTweetList}from'./lookup';export function TweetList(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tweetsInit=_useState2[0],setTweetsInit=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),tweets=_useState4[0],setTweets=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),tweetsDidSet=_useState6[0],setTweetsDidSet=_useState6[1];useEffect(function(){var final=_toConsumableArray(props.newTweets).concat(tweetsInit);if(final.length!==tweets.length){setTweets(final);}},[props.newTweets,tweets,tweetsInit]);useEffect(function(){if(tweetsDidSet===false){var handleTweetListLookup=function handleTweetListLookup(response,status){if(status===200){setTweetsInit(response);setTweetsDidSet(true);}else{alert('There was an error!');}};apiTweetList(props.username,handleTweetListLookup);}},[tweetsInit,tweetsDidSet,setTweetsDidSet,props.username]);var handleDidRetweet=function handleDidRetweet(newTweet){var updateTweetsInit=_toConsumableArray(tweetsInit);updateTweetsInit.unshift(newTweet);setTweetsInit(updateTweetsInit);var updateFinalTweets=_toConsumableArray(tweets);updateFinalTweets.unshift(tweets);setTweets(updateFinalTweets);};return tweets.map(function(item,index){return/*#__PURE__*/React.createElement(Tweet,{tweet:item,didRetweet:handleDidRetweet,className:\"my-5 py-5 border bg-white text-dark\",key:\"\".concat(index,\"-{item.id}\")});});}","map":{"version":3,"sources":["/Users/administrator/Desktop/Development-Projects/CodeEntrepreneurs/FollowCoding/tweetme2/tweetme2-web/src/tweets/list.js"],"names":["React","useEffect","useState","Tweet","apiTweetList","TweetList","props","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","length","handleTweetListLookup","response","status","alert","username","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index"],"mappings":"kcAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAA0C,OAA1C,CACA,OAAQC,KAAR,KAAoB,UAApB,CACA,OAAQC,YAAR,KAA4B,UAA5B,CAEA,MAAO,SAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,eACOJ,QAAQ,CAAC,EAAD,CADf,wCACtBK,UADsB,eACVC,aADU,8BAEDN,QAAQ,CAAC,EAAD,CAFP,yCAEtBO,MAFsB,eAEdC,SAFc,8BAGWR,QAAQ,CAAC,KAAD,CAHnB,yCAGtBS,YAHsB,eAGRC,eAHQ,eAI7BX,SAAS,CAAC,UAAM,CACZ,GAAMY,CAAAA,KAAK,CAAG,mBAAIP,KAAK,CAACQ,SAAV,EAAqBC,MAArB,CAA4BR,UAA5B,CAAd,CACA,GAAIM,KAAK,CAACG,MAAN,GAAiBP,MAAM,CAACO,MAA5B,CAAmC,CAC/BN,SAAS,CAACG,KAAD,CAAT,CACH,CACJ,CALQ,CAKP,CAACP,KAAK,CAACQ,SAAP,CAAkBL,MAAlB,CAA0BF,UAA1B,CALO,CAAT,CAOAN,SAAS,CAAC,UAAM,CACZ,GAAIU,YAAY,GAAK,KAArB,CAA4B,CACxB,GAAMM,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,QAAD,CAAWC,MAAX,CAAsB,CAChD,GAAIA,MAAM,GAAK,GAAf,CAAoB,CAChBX,aAAa,CAACU,QAAD,CAAb,CACAN,eAAe,CAAC,IAAD,CAAf,CACH,CAHD,IAGO,CACHQ,KAAK,CAAC,qBAAD,CAAL,CACH,CACJ,CAPD,CAQAhB,YAAY,CAACE,KAAK,CAACe,QAAP,CAAiBJ,qBAAjB,CAAZ,CACH,CACJ,CAZQ,CAYN,CAACV,UAAD,CAAaI,YAAb,CAA2BC,eAA3B,CAA4CN,KAAK,CAACe,QAAlD,CAZM,CAAT,CAcA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,QAAD,CAAc,CACnC,GAAMC,CAAAA,gBAAgB,oBAAOjB,UAAP,CAAtB,CACAiB,gBAAgB,CAACC,OAAjB,CAAyBF,QAAzB,EACAf,aAAa,CAACgB,gBAAD,CAAb,CACA,GAAME,CAAAA,iBAAiB,oBAAOjB,MAAP,CAAvB,CACAiB,iBAAiB,CAACD,OAAlB,CAA0BhB,MAA1B,EACAC,SAAS,CAACgB,iBAAD,CAAT,CACH,CAPD,CAQA,MAAOjB,CAAAA,MAAM,CAACkB,GAAP,CAAW,SAACC,IAAD,CAAOC,KAAP,CAAe,CAC7B,mBAAO,oBAAC,KAAD,EACP,KAAK,CAAED,IADA,CAEP,UAAU,CAAIN,gBAFP,CAGP,SAAS,CAAC,qCAHH,CAIP,GAAG,WAAKO,KAAL,cAJI,EAAP,CAKH,CANM,CAAP,CAOH","sourcesContent":["import React, {useEffect, useState}  from 'react'\nimport {Tweet} from './detail'\nimport {apiTweetList } from './lookup'\n\nexport function TweetList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    useEffect(() => {\n        const final = [...props.newTweets].concat(tweetsInit)\n        if (final.length !== tweets.length){\n            setTweets(final)\n        }\n    },[props.newTweets, tweets, tweetsInit])\n\n    useEffect(() => {\n        if (tweetsDidSet === false) {\n            const handleTweetListLookup = (response, status) => {\n                if (status === 200) {\n                    setTweetsInit(response)\n                    setTweetsDidSet(true)\n                } else {\n                    alert('There was an error!')\n                }\n            }\n            apiTweetList(props.username, handleTweetListLookup)\n        }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n    \n    const handleDidRetweet = (newTweet) => {\n        const updateTweetsInit = [...tweetsInit]\n        updateTweetsInit.unshift(newTweet)\n        setTweetsInit(updateTweetsInit)\n        const updateFinalTweets = [...tweets]\n        updateFinalTweets.unshift(tweets)\n        setTweets(updateFinalTweets)\n    }\n    return tweets.map((item, index)=>{\n        return <Tweet \n        tweet={item} \n        didRetweet = {handleDidRetweet}\n        className='my-5 py-5 border bg-white text-dark' \n        key={`${index}-{item.id}`}/>\n    })\n}\n"]},"metadata":{},"sourceType":"module"}