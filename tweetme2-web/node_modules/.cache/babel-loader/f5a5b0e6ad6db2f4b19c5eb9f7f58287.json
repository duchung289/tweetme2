{"ast":null,"code":"var _jsxFileName = \"/Users/administrator/Desktop/Development-Projects/CodeEntrepreneurs/FollowCoding/tweetme2/tweetme2-web/src/tweets/components.js\";\nimport React, { useState } from 'react';\nimport { apiTweetCreate } from './lookup';\nimport { TweetList } from './list';\n\nfunction TweetCreate(props) {\n  const textAreaRef = React.createRef();\n  const {\n    didTweet\n  } = props;\n\n  const handleBackendUpdate = (response, status) => {\n    if (status === 201) {\n      didTweet(tempNewTweets);\n    } else {\n      alert('An error occured. Please try again!');\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newValue = textAreaRef.current.value; // Backend api request\n\n    apiTweetCreate(newValue, handleBackendUpdate);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: textAreaRef,\n    required: true,\n    className: \"form-control\",\n    name: \"tweet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"Tweet\")));\n}\n\nexport function TweetsComponent(props) {\n  const textAreaRef = React.createRef();\n  const [newTweets, setNewTweets] = useState([]);\n  const canTweet = props.canTweet === \"false\" ? false : true;\n\n  const handleNewTweet = newTweet => {\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.unshift(newTweet);\n    setNewTweets(tempNewTweets);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newValue = textAreaRef.current.value; // Backend api request\n\n    apiTweetCreate(newValue, handleBackendUpdate);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }\n  }, canTweet === true && /*#__PURE__*/React.createElement(TweetCreate, {\n    didTweet: handleNewTweet,\n    className: \"col-12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(TweetList, Object.assign({\n    newTweets: newTweets\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/administrator/Desktop/Development-Projects/CodeEntrepreneurs/FollowCoding/tweetme2/tweetme2-web/src/tweets/components.js"],"names":["React","useState","apiTweetCreate","TweetList","TweetCreate","props","textAreaRef","createRef","didTweet","handleBackendUpdate","response","status","tempNewTweets","alert","handleSubmit","event","preventDefault","newValue","current","value","className","TweetsComponent","newTweets","setNewTweets","canTweet","handleNewTweet","newTweet","unshift"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,SAAQC,cAAR,QAA6B,UAA7B;AACA,SAAQC,SAAR,QAAwB,QAAxB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AACvB,QAAMC,WAAW,GAAGN,KAAK,CAACO,SAAN,EAApB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAaH,KAAnB;;AACA,QAAMI,mBAAmB,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AAC9C,QAAIA,MAAM,KAAI,GAAd,EAAmB;AACfH,MAAAA,QAAQ,CAACI,aAAD,CAAR;AACH,KAFD,MAEO;AACHC,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACH;AACJ,GAND;;AAOA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,QAAQ,GAACX,WAAW,CAACY,OAAZ,CAAoBC,KAAnC,CAF4B,CAG5B;;AACAjB,IAAAA,cAAc,CAACe,QAAD,EAAUR,mBAAV,CAAd;AACAH,IAAAA,WAAW,CAACY,OAAZ,CAAoBC,KAApB,GAA4B,EAA5B;AACH,GAND;;AAOA,sBAAO;AAAK,IAAA,SAAS,EAAEd,KAAK,CAACe,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAM,IAAA,QAAQ,EAAEN,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAU,IAAA,GAAG,EAAER,WAAf;AAA4B,IAAA,QAAQ,EAAE,IAAtC;AAA4C,IAAA,SAAS,EAAC,cAAtD;AAAqE,IAAA,IAAI,EAAG,OAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAGI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,CADG,CAAP;AAOH;;AAED,OAAO,SAASe,eAAT,CAAyBhB,KAAzB,EAAgC;AACnC,QAAMC,WAAW,GAAGN,KAAK,CAACO,SAAN,EAApB;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMuB,QAAQ,GAAGnB,KAAK,CAACmB,QAAN,KAAmB,OAAnB,GAA6B,KAA7B,GAAqC,IAAtD;;AACA,QAAMC,cAAc,GAAIC,QAAD,IAAc;AACjC,QAAId,aAAa,GAAG,CAAC,GAAGU,SAAJ,CAApB;AACAV,IAAAA,aAAa,CAACe,OAAd,CAAsBD,QAAtB;AACAH,IAAAA,YAAY,CAACX,aAAD,CAAZ;AACH,GAJD;;AAKA,QAAME,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,QAAQ,GAACX,WAAW,CAACY,OAAZ,CAAoBC,KAAnC,CAF4B,CAG5B;;AACAjB,IAAAA,cAAc,CAACe,QAAD,EAAUR,mBAAV,CAAd;AACAH,IAAAA,WAAW,CAACY,OAAZ,CAAoBC,KAApB,GAA4B,EAA5B;AACH,GAND;;AAOA,sBAAO;AAAK,IAAA,SAAS,EAAEd,KAAK,CAACe,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFI,QAAQ,KAAK,IAAb,iBAAqB,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEC,cAAvB;AAAuC,IAAA,SAAS,EAAC,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADnB,eAEH,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEH;AAAtB,KAAqCjB,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFG,CAAP;AAKH","sourcesContent":["import React, {useState}  from 'react'\nimport {apiTweetCreate} from './lookup'\nimport {TweetList} from './list'\n\nfunction TweetCreate(props){\n    const textAreaRef = React.createRef()\n    const {didTweet} = props\n    const handleBackendUpdate = (response, status) => {\n        if (status ===201) {\n            didTweet(tempNewTweets)\n        } else {\n            alert('An error occured. Please try again!')\n        }\n    }\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newValue=textAreaRef.current.value\n        // Backend api request\n        apiTweetCreate(newValue,handleBackendUpdate)        \n        textAreaRef.current.value = ''\n    }\n    return <div className={props.className}>\n        <form onSubmit={handleSubmit}>        \n            <textarea ref={textAreaRef} required={true} className='form-control' name = 'tweet'>\n            </textarea>\n            <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n        </form>\n    </div>\n}\n\nexport function TweetsComponent(props) {\n    const textAreaRef = React.createRef()\n    const [newTweets, setNewTweets] = useState([])\n    const canTweet = props.canTweet === \"false\" ? false : true\n    const handleNewTweet = (newTweet) => {\n        let tempNewTweets = [...newTweets]\n        tempNewTweets.unshift(newTweet)\n        setNewTweets(tempNewTweets)\n    }\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newValue=textAreaRef.current.value\n        // Backend api request\n        apiTweetCreate(newValue,handleBackendUpdate)        \n        textAreaRef.current.value = ''\n    }\n    return <div className={props.className}>\n        {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/>}\n        <TweetList newTweets={newTweets} {...props}/>\n    </div>\n    \n}\n"]},"metadata":{},"sourceType":"module"}