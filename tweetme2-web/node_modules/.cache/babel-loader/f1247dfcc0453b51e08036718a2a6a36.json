{"ast":null,"code":"function getCookie(name){var cookieValue=null;if(document.cookie&&document.cookie!==''){var cookies=document.cookie.split(';');for(var i=0;i<cookies.length;i++){var cookie=cookies[i].trim();// Does this cookie string begin with the name we want?\nif(cookie.substring(0,name.length+1)===name+'='){cookieValue=decodeURIComponent(cookie.substring(name.length+1));break;}}}return cookieValue;}export function backendLookup(method,endpoint,callback,data){var jsonData;if(data){jsonData=JSON.stringify(data);}var xhr=new XMLHttpRequest();var url=\"http://localhost:8000/api\".concat(endpoint);xhr.responseType=\"json\";var csrftoken=getCookie('csrftoken');xhr.open(method,url);xhr.setRequestHeader(\"Content-Type\",\"application/json\");if(csrftoken){//    xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\",\"XMLHttpRequest\")\nxhr.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\");xhr.setRequestHeader(\"X-CSRFToken\",csrftoken);}xhr.onload=function(){callback(xhr.response,xhr.status);};xhr.onerror=function(e){console.log(e);callback({'message':'There is an error!!!'},400);};xhr.send(jsonData);}","map":{"version":3,"sources":["/Users/administrator/Desktop/Development-Projects/CodeEntrepreneurs/FollowCoding/tweetme2/tweetme2-web/src/lookup/components.js"],"names":["getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","open","setRequestHeader","onload","response","status","onerror","e","console","log","send"],"mappings":"AAAA,QAASA,CAAAA,SAAT,CAAmBC,IAAnB,CAAyB,CACvB,GAAIC,CAAAA,WAAW,CAAG,IAAlB,CACA,GAAIC,QAAQ,CAACC,MAAT,EAAmBD,QAAQ,CAACC,MAAT,GAAoB,EAA3C,CAA+C,CAC3C,GAAIC,CAAAA,OAAO,CAAGF,QAAQ,CAACC,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,CAAd,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,OAAO,CAACG,MAA5B,CAAoCD,CAAC,EAArC,CAAyC,CACrC,GAAIH,CAAAA,MAAM,CAAGC,OAAO,CAACE,CAAD,CAAP,CAAWE,IAAX,EAAb,CACA;AACA,GAAIL,MAAM,CAACM,SAAP,CAAiB,CAAjB,CAAoBT,IAAI,CAACO,MAAL,CAAc,CAAlC,IAA0CP,IAAI,CAAG,GAArD,CAA2D,CACvDC,WAAW,CAAGS,kBAAkB,CAACP,MAAM,CAACM,SAAP,CAAiBT,IAAI,CAACO,MAAL,CAAc,CAA/B,CAAD,CAAhC,CACA,MACH,CACJ,CACJ,CACD,MAAON,CAAAA,WAAP,CACD,CAED,MAAO,SAASU,CAAAA,aAAT,CAAuBC,MAAvB,CAA+BC,QAA/B,CAAyCC,QAAzC,CAAmDC,IAAnD,CAAwD,CAC7D,GAAIC,CAAAA,QAAJ,CACA,GAAID,IAAJ,CAAU,CACRC,QAAQ,CAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAX,CACD,CACD,GAAMI,CAAAA,GAAG,CAAG,GAAIC,CAAAA,cAAJ,EAAZ,CACA,GAAMC,CAAAA,GAAG,oCAA+BR,QAA/B,CAAT,CACAM,GAAG,CAACG,YAAJ,CAAmB,MAAnB,CACA,GAAMC,CAAAA,SAAS,CAAGxB,SAAS,CAAC,WAAD,CAA3B,CACAoB,GAAG,CAACK,IAAJ,CAASZ,MAAT,CAAiBS,GAAjB,EACAF,GAAG,CAACM,gBAAJ,CAAqB,cAArB,CAAqC,kBAArC,EAEA,GAAIF,SAAJ,CAAe,CACjB;AACIJ,GAAG,CAACM,gBAAJ,CAAqB,kBAArB,CAAwC,gBAAxC,EACAN,GAAG,CAACM,gBAAJ,CAAqB,aAArB,CAAoCF,SAApC,EACD,CACDJ,GAAG,CAACO,MAAJ,CAAa,UAAW,CACtBZ,QAAQ,CAACK,GAAG,CAACQ,QAAL,CAAeR,GAAG,CAACS,MAAnB,CAAR,CACD,CAFD,CAGAT,GAAG,CAACU,OAAJ,CAAc,SAASC,CAAT,CAAY,CACxBC,OAAO,CAACC,GAAR,CAAYF,CAAZ,EACAhB,QAAQ,CAAC,CAAC,UAAU,sBAAX,CAAD,CAAqC,GAArC,CAAR,CACD,CAHD,CAIAK,GAAG,CAACc,IAAJ,CAASjB,QAAT,EACD","sourcesContent":["function getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n      var cookies = document.cookie.split(';');\n      for (var i = 0; i < cookies.length; i++) {\n          var cookie = cookies[i].trim();\n          // Does this cookie string begin with the name we want?\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n              break;\n          }\n      }\n  }\n  return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data){\n  let jsonData;\n  if (data) {\n    jsonData = JSON.stringify(data)\n  }\n  const xhr = new XMLHttpRequest()\n  const url = `http://localhost:8000/api${endpoint}`\n  xhr.responseType = \"json\"\n  const csrftoken = getCookie('csrftoken')\n  xhr.open(method, url)\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n  \n  if (csrftoken) {\n//    xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\",\"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n  }\n  xhr.onload = function() {\n    callback(xhr.response, xhr.status) \n  }\n  xhr.onerror = function(e) {\n    console.log(e)\n    callback({'message':'There is an error!!!'}, 400)\n  }\n  xhr.send(jsonData)\n}\n"]},"metadata":{},"sourceType":"module"}