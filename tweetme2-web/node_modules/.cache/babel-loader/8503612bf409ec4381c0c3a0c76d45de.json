{"ast":null,"code":"var _jsxFileName = \"/Users/administrator/Desktop/Development-Projects/CodeEntrepreneurs/FollowCoding/tweetme2/tweetme2-web/src/profiles/badge.js\";\nimport React, { useState, useEffect } from 'react';\nimport { apiProfileDetail, apiProfileFollowToggle } from './lookup';\nimport { UserDisplay, UserPicture } from \"./components\";\n\nfunction ProfileBadge(props) {\n  const {\n    user,\n    didFollowToggle,\n    profileLoading\n  } = props;\n  let currentVerb = user && user.is_following ? \"Unfollow\" : \"Follow\";\n  currentVerb = profileLoading ? \"Loading...\" : currentVerb;\n\n  const handleFollowingToggle = event => {\n    console.log(event);\n    event.preventDefault();\n\n    if (didFollowToggle && !profileLoading) {\n      didFollowToggle(currentVerb);\n    }\n  };\n\n  return user ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(UserPicture, {\n    user: user,\n    hideLink: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UserDisplay, {\n    user: user,\n    includeFullname: true,\n    hideLink: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: handleFollowingToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, currentVerb)) : null;\n}\n\nexport function ProfileBadgeComponent(props) {\n  const {\n    username\n  } = props; // lookup\n\n  const [didLookup, setDidLookup] = useState(false);\n  const [profile, setProfile] = useState(null);\n  const [profileLoading, setProfileLoading] = useState(false);\n\n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setProfile(response);\n    } else {\n      alert(\"the was an error finding your tweet\");\n    }\n  };\n\n  useEffect(() => {\n    if (didLookup === false) {\n      apiProfileDetail(username, handleBackendLookup);\n      setDidLookup(true);\n    }\n  }, [username, didLookup, setDidLookup]);\n\n  const handleNewFollow = actionVerb => {\n    apiProfileFollowToggle(username, actionVerb, (response, status) => {\n      console.log(response, status);\n      setProfileLoading(false);\n    });\n    setProfileLoading(true);\n  };\n\n  return didLookup === false ? \"Loading...\" : profile ? /*#__PURE__*/React.createElement(ProfileBadge, {\n    user: profile,\n    didFollowToggle: handleNewFollow,\n    profileLoading: profileLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 56\n    }\n  }) : null;\n}","map":{"version":3,"sources":["/Users/administrator/Desktop/Development-Projects/CodeEntrepreneurs/FollowCoding/tweetme2/tweetme2-web/src/profiles/badge.js"],"names":["React","useState","useEffect","apiProfileDetail","apiProfileFollowToggle","UserDisplay","UserPicture","ProfileBadge","props","user","didFollowToggle","profileLoading","currentVerb","is_following","handleFollowingToggle","event","console","log","preventDefault","ProfileBadgeComponent","username","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","response","status","alert","handleNewFollow","actionVerb"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nimport {apiProfileDetail, apiProfileFollowToggle} from './lookup'\nimport { UserDisplay, UserPicture } from \"./components\";\n\nfunction ProfileBadge(props) {\n    const {user, didFollowToggle, profileLoading} = props\n    let currentVerb = (user && user.is_following)? \"Unfollow\" : \"Follow\"\n    currentVerb =profileLoading ? \"Loading...\" : currentVerb\n    const handleFollowingToggle = (event) => {\n        console.log(event)\n        event.preventDefault()\n        if (didFollowToggle && !profileLoading){\n            didFollowToggle(currentVerb)\n        }\n    }\n    return user ? <div>\n        <UserPicture user={user} hideLink/>\n        <p><UserDisplay user={user} includeFullname hideLink/></p>\n        <button className='btn btn-primary' onClick={handleFollowingToggle}>{currentVerb}</button>\n    </div> :null\n}\n\nexport function ProfileBadgeComponent(props){\n    const {username} = props\n    // lookup\n    const [didLookup, setDidLookup] = useState(false)\n    const [profile, setProfile] = useState(null)\n    const [profileLoading, setProfileLoading] = useState(false)\n    const handleBackendLookup = (response, status) => {\n        if (status===200){\n            setProfile(response)\n        } else {\n            alert(\"the was an error finding your tweet\")\n        }\n    }\n    useEffect(()=> {\n        if (didLookup===false){\n            apiProfileDetail(username, handleBackendLookup)\n            setDidLookup(true)\n        }\n    }, [username, didLookup, setDidLookup])\n\n    const handleNewFollow = (actionVerb) => {\n        apiProfileFollowToggle(username, actionVerb, (response, status)=>{\n            console.log(response, status)\n            setProfileLoading(false)\n        })\n        setProfileLoading(true)\n    }\n    return didLookup ===false? \"Loading...\" : profile? <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading}/> : null\n}"]},"metadata":{},"sourceType":"module"}