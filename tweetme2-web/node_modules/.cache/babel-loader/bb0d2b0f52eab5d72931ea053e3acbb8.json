{"ast":null,"code":"var _jsxFileName = \"/Users/administrator/Desktop/Development-Projects/CodeEntrepreneurs/FollowCoding/tweetme2/tweetme2-web/src/tweets/components.js\";\nimport React, { useEffect, useState } from 'react';\nimport { loadTweets } from '../lookup';\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action\n  } = props;\n  const className = props.className ? props.className : 'btn btn-primary btn-sm';\n  const actionDisplay = action.display ? action.display : 'Action';\n  const display = action.type === 'like' ? `${tweet.likes} ${actionDisplay}` : actionDisplay;\n\n  const handleClick = event => {\n    event.preventDefault();\n\n    if (action.type === 'like') {\n      console.log(tweet.likes + 1);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }\n  }, display);\n}\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, tweet.id, \" - \", tweet.content), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: 'like',\n      display: 'Likes'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: 'unlike',\n      display: 'Unlike'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: 'retweet',\n      display: 'ReTweet'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  })));\n}\nexport function TweetList(props) {\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      if (status === 200) {\n        setTweets(response);\n      } else {\n        alert('There was an error!');\n      }\n    };\n\n    loadTweets(myCallback);\n  }, []);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      tweet: item,\n      key: index,\n      className: \"my-5 py-5 border bg-white text-dark\",\n      key: `${index}-{item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }\n    });\n  });\n}","map":{"version":3,"sources":["/Users/administrator/Desktop/Development-Projects/CodeEntrepreneurs/FollowCoding/tweetme2/tweetme2-web/src/tweets/components.js"],"names":["React","useEffect","useState","loadTweets","ActionBtn","props","tweet","action","className","actionDisplay","display","type","likes","handleClick","event","preventDefault","console","log","Tweet","id","content","TweetList","tweets","setTweets","myCallback","response","status","alert","map","item","index"],"mappings":"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","sourcesContent":["import React, {useEffect, useState}  from 'react'\n\nimport {loadTweets} from '../lookup'\n\nexport function ActionBtn(props) {\n    const {tweet, action} = props\n    const className = props.className ? props.className:'btn btn-primary btn-sm'\n    const actionDisplay = action.display? action.display : 'Action'\n    const display = action.type === 'like' ? `${tweet.likes} ${actionDisplay}` : actionDisplay\n    const handleClick = (event) =>{\n        event.preventDefault()\n        if (action.type === 'like'){\n            console.log(tweet.likes + 1)\n        }\n    }\n    return <button className={className}>{display}</button>\n}\n  \nexport  function Tweet(props) {\n    const {tweet} = props\n    const className = props.className ? props.className:'col-10 mx-auto col-md-6'\n    return <div className={className}>\n      <p>{tweet.id} - {tweet.content}</p>\n      <div className='btn btn-group'>\n        <ActionBtn tweet={tweet} action={{type:'like', display:'Likes'}}/>\n        <ActionBtn tweet={tweet} action={{type:'unlike', display:'Unlike'}}/>\n        <ActionBtn tweet={tweet} action={{type:'retweet', display:'ReTweet'}}/>\n      </div>\n    </div>\n}\n  \nexport function TweetList(props) {\n    const [tweets, setTweets] = useState([])\n  \n    useEffect(() => {\n      const myCallback = (response, status) => {\n        if (status ===200) {\n          setTweets(response)\n        } else {\n          alert('There was an error!')\n        }\n      }\n      loadTweets(myCallback)\n    }, [])\n    return tweets.map((item, index)=>{\n      return <Tweet tweet={item} key={index} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`}/>\n    })\n}\n"]},"metadata":{},"sourceType":"module"}