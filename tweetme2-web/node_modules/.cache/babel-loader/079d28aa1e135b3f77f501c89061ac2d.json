{"ast":null,"code":"var _jsxFileName = \"/Users/administrator/Desktop/Development-Projects/CodeEntrepreneurs/FollowCoding/tweetme2/tweetme2-web/src/tweets/components.js\";\nimport React, { useEffect, useState } from 'react';\nimport { loadTweets } from '../lookup'; // import {TweetList} from '.'\n\nexport function TweetsComponent(props) {\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(event);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: \"handleSubmit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    required: \"true\",\n    className: \"form-control\",\n    name: \"tweet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, \"Tweet\"))), /*#__PURE__*/React.createElement(TweetList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }));\n}\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action\n  } = props;\n  const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\n  const [userLike, setUserLike] = useState(tweet.likes === true ? true : false);\n  const className = props.className ? props.className : 'btn btn-primary btn-sm';\n  const actionDisplay = action.display ? action.display : 'Action';\n\n  const handleClick = event => {\n    event.preventDefault();\n\n    if (action.type === 'like') {\n      if (userLike === true) {\n        // perhaps I unlike it\n        setLikes(likes - 1);\n        setUserLike(false);\n      } else {\n        setLikes(likes + 1);\n        setUserLike(true);\n      }\n    }\n  };\n\n  const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay;\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: className,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }\n  }, display);\n}\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, tweet.id, \" - \", tweet.content), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: 'like',\n      display: 'Likes'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: 'unlike',\n      display: 'Unlike'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: 'retweet',\n      display: 'ReTweet'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })));\n}\nexport function TweetList(props) {\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      if (status === 200) {\n        setTweets(response);\n      } else {\n        alert('There was an error!');\n      }\n    };\n\n    loadTweets(myCallback);\n  }, []);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      tweet: item,\n      key: index,\n      className: \"my-5 py-5 border bg-white text-dark\",\n      key: `${index}-{item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 14\n      }\n    });\n  });\n}","map":{"version":3,"sources":["/Users/administrator/Desktop/Development-Projects/CodeEntrepreneurs/FollowCoding/tweetme2/tweetme2-web/src/tweets/components.js"],"names":["React","useEffect","useState","loadTweets","TweetsComponent","props","handleSubmit","event","preventDefault","console","log","className","ActionBtn","tweet","action","likes","setLikes","userLike","setUserLike","actionDisplay","display","handleClick","type","Tweet","id","content","TweetList","tweets","setTweets","myCallback","response","status","alert","map","item","index"],"mappings":"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","sourcesContent":["import React, {useEffect, useState}  from 'react'\n\nimport {loadTweets} from '../lookup'\n// import {TweetList} from '.'\n\nexport function TweetsComponent(props) {\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        console.log(event)\n    }\n    return <div className={props.className}>\n        <div className='col-12 mb-3'>\n            <form onSubmit='handleSubmit'>        \n                <textarea required='true' className='form-control' name = 'tweet'>\n\n                </textarea>\n                <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n            </form>\n        </div>\n        <TweetList/>\n    </div>\n    \n}\n\nexport function ActionBtn(props) {\n    const {tweet, action} = props\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0)\n    const [userLike, setUserLike] = useState(tweet.likes ===true ? true : false)\n    const className = props.className ? props.className:'btn btn-primary btn-sm'\n    const actionDisplay = action.display? action.display : 'Action'\n    const handleClick = (event) =>{\n        event.preventDefault()\n        if (action.type === 'like'){\n            if (userLike ===true) {\n                // perhaps I unlike it\n                setLikes(likes -1)\n                setUserLike(false)\n            } else {\n                setLikes(likes + 1)\n                setUserLike(true)\n            }\n        }\n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n    \n    return <button className={className} onClick={handleClick}>{display}</button>\n}\n  \nexport  function Tweet(props) {\n    const {tweet} = props\n    const className = props.className ? props.className:'col-10 mx-auto col-md-6'\n    return <div className={className}>\n      <p>{tweet.id} - {tweet.content}</p>\n      <div className='btn btn-group'>\n        <ActionBtn tweet={tweet} action={{type:'like', display:'Likes'}}/>\n        <ActionBtn tweet={tweet} action={{type:'unlike', display:'Unlike'}}/>\n        <ActionBtn tweet={tweet} action={{type:'retweet', display:'ReTweet'}}/>\n      </div>\n    </div>\n}\n  \nexport function TweetList(props) {\n    const [tweets, setTweets] = useState([])\n  \n    useEffect(() => {\n      const myCallback = (response, status) => {\n        if (status ===200) {\n          setTweets(response)\n        } else {\n          alert('There was an error!')\n        }\n      }\n      loadTweets(myCallback)\n    }, [])\n    return tweets.map((item, index)=>{\n      return <Tweet tweet={item} key={index} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`}/>\n    })\n}\n"]},"metadata":{},"sourceType":"module"}