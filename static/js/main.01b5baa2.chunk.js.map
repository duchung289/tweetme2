{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/feed.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","console","log","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","includeFullname","hideLink","displayName","first_name","last_name","Fragment","UserPicture","userIdSpan","DisplayCount","class","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","follower_count","following_count","bio","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","alert","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","TweetList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newValue","current","value","ref","required","FeedList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","setTweet","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","createElement","tweetFeedEl","dataset","tweetsEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.01b5baa2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n      var cookies = document.cookie.split(';');\n      for (var i = 0; i < cookies.length; i++) {\n          var cookie = cookies[i].trim();\n          // Does this cookie string begin with the name we want?\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n              break;\n          }\n      }\n  }\n  return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data){\n  let jsonData;\n  if (data) {\n    jsonData = JSON.stringify(data)\n  }\n  const xhr = new XMLHttpRequest()\n  const url = `http://localhost:8000/api${endpoint}`\n  xhr.responseType = \"json\"\n  const csrftoken = getCookie('csrftoken')\n  xhr.open(method, url)\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n  \n  if (csrftoken) {\n//    xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\",\"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n  }\n  xhr.onload = function() {\n    if (xhr.status ===403){\n      const detail = xhr.response.detail\n      if (detail === \"Authentication credentials were not provided.\"){\n        if (window.location.href.indexOf(\"login\") === -1) {\n          window.location.href = \"/login?showLoginRequired=true\"\n        }        \n      }\n    }\n    callback(xhr.response, xhr.status) \n  }\n  xhr.onerror = function(e) {\n    callback({'message':'There is an error!!!'}, 400)\n  }\n  xhr.send(jsonData)\n}\n","import {backendLookup} from '../lookup'\n\n\nexport function apiTweetCreate(newTweet, callback) {\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\n}\n\nexport function apiTweetFeed(callback, nextUrl) {\n    let endpoint = \"/tweets/feed\"\n    if (nextUrl !== null && nextUrl !== undefined){\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n    }\n    backendLookup(\"GET\", endpoint, callback)  \n}\n\nexport function apiTweetList(username, callback, nextUrl) {\n    let endpoint = \"/tweets/\"\n    if (username) {\n        endpoint = `/tweets/?username=${username}`\n    }\n    if (nextUrl !== null && nextUrl !== undefined){\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n    }\n    backendLookup(\"GET\", endpoint, callback)  \n}\n\nexport function apiTweetAction (tweetId, action, callback) {\n    const data = {id: tweetId, action: action}\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n    backendLookup(\"GET\", `/tweets/${tweetId}/`, callback)  \n}\n","import React from 'react'\nimport {apiTweetAction} from './lookup'\n\n\nexport function ActionBtn(props) {\n    const {tweet, action, didPerformAction} = props\n    const likes = tweet.likes ? tweet.likes : 0\n    const className = props.className ? props.className:'btn btn-primary btn-sm'\n    const actionDisplay = action.display? action.display : 'Action'\n    const handleActionBackendEvent = (response, status) => {\n        console.log(response, status)\n        if ((status ===200 || status === 201) && didPerformAction){\n            didPerformAction(response, status)\n        }        \n    }\n    const handleClick = (event) =>{\n        event.preventDefault()\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent)        \n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay    \n    return <button className={className} onClick={handleClick}>{display}</button>\n}\n","import React from 'react'\n\nexport function UserLink(props) {\n    const {username} = props\n    const handleUserLink = (event) => {\n        window.location.href = `/profile/${username}`\n    }\n    return <span className='pointer' onClick={handleUserLink}>\n        {props.children}\n    </span>\n}\n\nexport function UserDisplay(props) {\n    const {user, includeFullname, hideLink} = props\n    const displayName = includeFullname === true? `${user.first_name} ${user.last_name} ` : null\n    return <React.Fragment>\n        {displayName}        \n        {hideLink=== true ? `@${user.username}` : <UserLink username={user.username}>@{user.username}</UserLink>}\n    </React.Fragment>\n}\n\nexport function UserPicture(props) {\n    const {user, hideLink} = props\n    const userIdSpan = <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\n        {user.username[0]}\n    </span>\n    return hideLink ===true ? userIdSpan : <UserLink username={user.username}>{userIdSpan}</UserLink>\n}\n\n","import React from 'react'\nimport numeral from 'numeral'\n\nexport function DisplayCount (props) {\n    return <span class={props.className}>{numeral(props.children).format(\"0 a\")}</span>\n}\n","import React, {useState, useEffect} from 'react'\n\nimport {apiProfileDetail, apiProfileFollowToggle} from './lookup'\nimport { UserDisplay, UserPicture } from \"./components\"\nimport {DisplayCount} from './utils'\n\nfunction ProfileBadge(props) {\n    const {user, didFollowToggle, profileLoading} = props\n    let currentVerb = (user && user.is_following)? \"Unfollow\" : \"Follow\"\n    currentVerb =profileLoading ? \"Loading...\" : currentVerb\n    const handleFollowingToggle = (event) => {\n        event.preventDefault()\n        if (didFollowToggle && !profileLoading){\n            didFollowToggle(currentVerb)\n        }\n    }\n    return user ? <div>\n        <UserPicture user={user} hideLink/>\n        <p><UserDisplay user={user} includeFullname hideLink/></p>\n        <p><DisplayCount>{user.follower_count}</DisplayCount> {user.follower_count>1?\"followers\":\"follower\"}</p>\n        <p><DisplayCount>{user.following_count}</DisplayCount> following</p>\n        <p>{user.location}</p>\n        <p>{user.bio}</p>\n\n        <button className='btn btn-primary' onClick={handleFollowingToggle}>{currentVerb}</button>\n    </div> :null\n}\n\nexport function ProfileBadgeComponent(props){\n    const {username} = props\n    // lookup\n    const [didLookup, setDidLookup] = useState(false)\n    const [profile, setProfile] = useState(null)\n    const [profileLoading, setProfileLoading] = useState(false)\n    const handleBackendLookup = (response, status) => {\n        if (status===200){\n            setProfile(response)\n        } else {\n            alert(\"the was an error finding your tweet\")\n        }\n    }\n    useEffect(()=> {\n        if (didLookup===false){\n            apiProfileDetail(username, handleBackendLookup)\n            setDidLookup(true)\n        }\n    }, [username, didLookup, setDidLookup])\n\n    const handleNewFollow = (actionVerb) => {\n        apiProfileFollowToggle(username, actionVerb, (response, status)=>{\n            // console.log(response, status)\n            if (status===200){\n                setProfile(response)\n                // apiProfileDetail(username, handleBackendLookup)\n            }\n            setProfileLoading(false)\n        })\n        setProfileLoading(true)\n    }\n    return didLookup ===false? \"Loading...\" : profile? <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading}/> : null\n}","import {backendLookup} from '../lookup'\n\nexport function apiProfileDetail(username, callback) {\n    backendLookup(\"GET\", `/profiles/${username}/`, callback)  \n}\n\nexport function apiProfileFollowToggle(username, action, callback) {\n    const data = {action: `${action && action}`.toLowerCase()}\n    backendLookup(\"POST\", `/profiles/${username}/follow`, callback, data)  \n}\n","import React, {useState}  from 'react'\nimport {ActionBtn} from './buttons'\n\nimport {UserDisplay, UserPicture} from '../profiles'\n\nexport function ParentTweet(props) {\n    const {tweet} = props\n    return tweet.parent? <Tweet isRetweet retweeter={props.retweeter} hideActions className={''} tweet={tweet.parent}/> : null\n}\n  \nexport  function Tweet(props) {\n    const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\n    const [actionTweet,setActionTweet] = useState(props.tweet ? props.tweet : null)\n    let className = props.className ? props.className:'col-10 mx-auto col-md-9'\n    className = isRetweet ===true? `${className} p-2 border rounded` : className\n    const path = window.location.pathname\n    const match = path.match(/(?<tweetid>\\d+)/)\n    const urlTweetId = match ? match.groups.tweetid : -1          \n    const isDetail = `${tweet.id}` ===  `${urlTweetId}`\n    const handleLink = (event) => {\n        event.preventDefault()\n        window.location.href = `/${tweet.id}`\n    }\n    const handlePerformAction = (newActionTweet, status) => {\n        if (status ===200){\n            setActionTweet(newActionTweet)\n        } else if (status === 201) {\n            if (didRetweet){\n                didRetweet(newActionTweet)\n            }\n        }\n        \n    }\n    return <div className={className}>\n        {isRetweet === true && <div className='mb-2'>\n            <span className='small text-muted'>Retweet via <UserDisplay user={retweeter}/></span>\n        </div>}\n        <div className='d-flex'>\n            <div className=''>\n                <UserPicture user={tweet.user}/>\n            </div> \n            <div className='col-11'>                \n                <div>\n                    <p>\n                        <UserDisplay includeFullname user={tweet.user}/>\n                    </p>\n                    <p>{tweet.content}</p>\n                    \n                    <ParentTweet tweet={tweet} retweeter={tweet.user}/>\n                </div>\n            \n                <div className='btn btn-group px-0'>\n                    {(actionTweet && hideActions !== true) && <React.Fragment>\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:'like', display:'Likes'}}/>\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:'unlike', display:'Unlike'}}/>\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:'retweet', display:'ReTweet'}}/>\n                    </React.Fragment>}\n                    {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\n                </div> \n            </div>\n        </div>\n    </div>\n}","import React, {useEffect, useState}  from 'react'\nimport {Tweet} from './detail'\nimport {apiTweetList } from './lookup'\n\nexport function TweetList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState([null])\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    useEffect(() => {\n        const final = [...props.newTweets].concat(tweetsInit)\n        if (final.length !== tweets.length){\n            setTweets(final)\n        }\n    },[props.newTweets, tweets, tweetsInit])\n\n    useEffect(() => {\n        if (tweetsDidSet === false) {\n            const handleTweetListLookup = (response, status) => {\n                if (status === 200) {\n                    setNextUrl(response.next)\n                    setTweetsInit(response.results)\n                    setTweetsDidSet(true)\n                } else {\n                    alert('There was an error!')\n                }\n            }\n            apiTweetList(props.username, handleTweetListLookup)\n        }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n    \n    const handleDidRetweet = (newTweet) => {\n        const updateTweetsInit = [...tweetsInit]\n        updateTweetsInit.unshift(newTweet)\n        setTweetsInit(updateTweetsInit)\n        const updateFinalTweets = [...tweets]\n        updateFinalTweets.unshift(tweets)\n        setTweets(updateFinalTweets)\n    }\n\n    const handleLoadNext = (event   ) => {\n        event.preventDefault()\n        if (nextUrl !== null){\n            const handleLoadNextResponse = (response, status) => {\n                if (status === 200) {\n                    setNextUrl(response.next)\n                    const newTweets = [...tweets].concat(response.results)\n                    setTweetsInit(newTweets)\n                    setTweets(newTweets)\n                } else {\n                    alert('There was an error!')\n                }\n            }\n            apiTweetList(props.username, handleLoadNextResponse, nextUrl)\n        }\n    }\n\n    return <React.Fragment>{tweets.map((item, index)=>{\n        return <Tweet \n        tweet={item} \n        didRetweet = {handleDidRetweet}\n        className='my-5 py-5 border bg-white text-dark' \n        key={`${index}-{item.id}`}/>\n    })}\n    {nextUrl!== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\n    </React.Fragment>\n}\n","import React from 'react'\nimport {apiTweetCreate} from './lookup'\n\nexport function TweetCreate(props){\n    const textAreaRef = React.createRef()\n    const {didTweet} = props\n    const handleBackendUpdate = (response, status) => {\n        if (status ===201) {\n            didTweet(response)\n        } else {\n            alert('An error occured. Please try again!')\n        }\n    }\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newValue=textAreaRef.current.value\n        // Backend api request\n        apiTweetCreate(newValue,handleBackendUpdate)        \n        textAreaRef.current.value = ''\n    }\n    return <div className={props.className}>\n        <form onSubmit={handleSubmit}>        \n            <textarea ref={textAreaRef} required={true} className='form-control' name = 'tweet'>\n            </textarea>\n            <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n        </form>\n    </div>\n}\n","import React, {useEffect, useState}  from 'react'\nimport {Tweet} from './detail'\nimport {apiTweetFeed} from './lookup'\n\nexport function FeedList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState([null])\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    useEffect(() => {\n        const final = [...props.newTweets].concat(tweetsInit)\n        if (final.length !== tweets.length){\n            setTweets(final)\n        }\n    },[props.newTweets, tweets, tweetsInit])\n\n    useEffect(() => {\n        if (tweetsDidSet === false) {\n            const handleTweetListLookup = (response, status) => {\n                if (status === 200) {\n                    setNextUrl(response.next)\n                    setTweetsInit(response.results)\n                    setTweetsDidSet(true)\n                }\n            }\n            apiTweetFeed(handleTweetListLookup)\n        }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n    \n    const handleDidRetweet = (newTweet) => {\n        const updateTweetsInit = [...tweetsInit]\n        updateTweetsInit.unshift(newTweet)\n        setTweetsInit(updateTweetsInit)\n        const updateFinalTweets = [...tweets]\n        updateFinalTweets.unshift(tweets)\n        setTweets(updateFinalTweets)\n    }\n\n    const handleLoadNext = (event   ) => {\n        event.preventDefault()\n        if (nextUrl !== null){\n            const handleLoadNextResponse = (response, status) => {\n                if (status === 200) {\n                    setNextUrl(response.next)\n                    const newTweets = [...tweets].concat(response.results)\n                    setTweetsInit(newTweets)\n                    setTweets(newTweets)\n                }\n            }\n            apiTweetFeed(handleLoadNextResponse, nextUrl)\n        }\n    }\n\n    return <React.Fragment>{tweets.map((item, index)=>{\n        return <Tweet \n        tweet={item} \n        didRetweet = {handleDidRetweet}\n        className='my-5 py-5 border bg-white text-dark' \n        key={`${index}-{item.id}`}/>\n    })}\n    {nextUrl!== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\n    </React.Fragment>\n}\n","import React, {useEffect, useState}  from 'react'\nimport {TweetList} from './list'\nimport {Tweet} from './detail'\nimport {apiTweetDetail} from './lookup'\nimport {TweetCreate} from './create'\nimport {FeedList} from './feed'\n\nexport function FeedComponent(props) {\n    const [newTweets, setNewTweets] = useState([])\n    const canTweet = props.canTweet === \"false\" ? false : true\n    const handleNewTweet = (newTweet) => {\n        let tempNewTweets = [...newTweets]\n        tempNewTweets.unshift(newTweet)\n        setNewTweets(tempNewTweets)\n    }\n    return <div className={props.className}>\n        {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/>}\n        <FeedList newTweets={newTweets} {...props}/>\n    </div>\n    \n}\n\nexport function TweetsComponent(props) {\n    const [newTweets, setNewTweets] = useState([])\n    const canTweet = props.canTweet === \"false\" ? false : true\n    const handleNewTweet = (newTweet) => {\n        let tempNewTweets = [...newTweets]\n        tempNewTweets.unshift(newTweet)\n        setNewTweets(tempNewTweets)\n    }\n    return <div className={props.className}>\n        {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/>}\n        <TweetList newTweets={newTweets} {...props}/>\n    </div>\n    \n}\n\nexport function TweetDetailComponent(props) {\n    const {tweetId} = props\n    const [didLookup, setDidLookup] = useState(false)\n    const [tweet, setTweet] = useState(null)\n    const handleBackendLookup = (response, status) => {\n        if (status===200){\n            setTweet(response)\n        } else {\n            alert(\"the was an error finding your tweet\")\n        }\n    }\n    useEffect(()=> {\n        if (didLookup===false){\n            apiTweetDetail(tweetId, handleBackendLookup)\n            setDidLookup(true)\n        }\n    }, [tweetId, didLookup, setDidLookup])\n\n    return tweet===null? null : <Tweet tweet={tweet} className={props.className}/>\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {FeedComponent, TweetsComponent, TweetDetailComponent} from './tweets'\nimport {ProfileBadgeComponent} from './profiles'\nimport * as serviceWorker from './serviceWorker';\n\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n  ReactDOM.render(<App />, appEl);\n}\n\nconst e = React.createElement\n\nconst tweetFeedEl = document.getElementById('tweetme-2-feed')\nif (tweetFeedEl) {\n  ReactDOM.render(\n    e(FeedComponent, tweetFeedEl.dataset), \n    tweetFeedEl\n  )\n}\n\nconst tweetsEl = document.getElementById('tweetme-2')\nif (tweetsEl) {\n  ReactDOM.render(\n    e(TweetsComponent, tweetsEl.dataset), \n    tweetsEl\n  )\n}\n\nconst tweetDetailEl = document.querySelectorAll(\".tweetme-2-detail\")\ntweetDetailEl.forEach(container=> {\n  ReactDOM.render(\n    e(TweetDetailComponent, container.dataset), \n    container\n  )\n})\n\nconst userProfileBadgeEl = document.querySelectorAll(\".tweetme-2-profile-badge\")\nuserProfileBadgeEl.forEach(container=> {\n  ReactDOM.render(\n    e(ProfileBadgeComponent, container.dataset), \n    container\n  )\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}